#include <iostream>
using namespace std;
struct node
{
    int data;
    struct node *next;
}*head;
void ll(struct node *p)
{
    while(p!=NULL)
    {
        cout << "Element is : " << p->data<<endl;
        p = p->next;
    }

}
void create(int A[],int n)
{
    int i;
    struct node *t,*last;
    head=new node;
    head->data=A[0];
    head->next=NULL;
    last=head;
    for(i=1;i<n;i++)
    {
        t=new node;
        t->data=A[i];
        t->next=NULL;
        last->next=t;
        last=t;

    }
}
void display(struct node *p)
{
    while(p != NULL)
    {
        cout<<p->data<<" ";
        p=p->next;
    }
}
void rdisplay(struct node *p)
{
    if(p!=NULL) {
        cout <<p->data<<" ";
        display(p->next);
    }

}
int count(struct node *p)
{
    int count=0;
    while (p!=NULL)
    {
        count++;
        p=p->next;
    }
    return count;
}
int sum(struct node *p)
{
    int sum=0;
    while(p!=NULL)
    {
        sum+=p->data;
        p=p->next;
    }
    return sum;
}
void max(struct node *p)
{
    int max=INT_MIN;
    while(p!=0)
    {
        if(p->data>max)
        {
            max=p->data;
        }
        p=p->next;
    }
    cout<<"Maximum element is "<<max;
}
node * linearsearch(struct node *p,int key)
{
    while(p!=0)
    {
        if(key==p->data)
            return p;
        else
        {
            p=p->next;
        }
    }
    return NULL;
}
void insert(struct node *p,int index,int x)
{
    struct node*t;
    if(index<0 ||index >count(head))
        return;
    t=new node;
    t->data=x;
    if(index==0)
    {
        t->next=head;
        head=t;
    }
    else
    {
        int i;
        for(i=0;i<index-1;i++)
        {
            p = p->next;
        }
        t->next=p->next;
        p->next=t;

    }
}
void insertlast(int x)
{
    struct node *t;
    t=new node;
    t->data=x;

}
int main()
{
    int A[]={1,3,5,7,9};
    create(A,5);
    //display(head);
    //  insert(head,2 ,2);
    display(head);
    //  cout<<count(head);
//  cout<<sum(head);
    // max(head);
    //struct node *temp;
    // temp=linearsearch(head,9);
    //if(temp)
    //  cout<<"found "<<temp->data;
    //else
    //  cout<<"key not found";
    return 0;

}
