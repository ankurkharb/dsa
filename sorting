#include <iostream>
using namespace std;
void BubbleSort(int A[],int n)
{
    int i,j;
    int flag=0;
    for(i=0;i<n-1;i++)
    {
        for(j=0;j<n-1-i;j++)
        {
            if(A[j]>A[j+1])
            {
                int temp=A[j];
                A[j]=A[j+1];
                A[j+1]=temp;
                flag=1;
            }
        }
        if(flag==0) {
            break;
        }
    }
}
void InsertionSort(int A[],int n)
{
    int i,j,x;
    for( i=1;i<n;i++)
    {
        x=A[i];
        j=i-1;
        while(j>-1 && A[j]>x)
        {
            A[j+1]=A[j];
            j--;
        }
        A[j+1]=x;
    }
}
void selectionsort(int A[],int n)
{
    int i,j,k;
    for(i=0;i<n-1;i++)
    {
        for(k=j=i;j<n;j++)
        {
            if(A[j]<A[k])
            {
                k=j;
            }
        }
        int temp = A[i];
        A[i] = A[k];
        A[k] = temp;
    }
}
void mergesort(int a[],int b[],int c[],int m,int n)
{
    int i,j,k;
    i=j=k=0;
    while(i<m && j<n) {
        if (a[i] < b[j])
            c[k++] = a[i++];
        else
            c[k++] = b[j++];
    }
    for(;i<m;i++)
        c[k++]=a[i];
    for(;j<n;j++)
        c[k++]=b[j];
}
void merge(int A[],int l,int mid,int h)
{
    int B[100];
    int i=l;
    int j=mid+1;
    int k=l;
    while(i<=mid && j<=h)
    {
        if(A[i]<A[j])
            B[k++]=A[i++];
        else
            B[k++]=A[j++];
    }
    for(;i<=mid;i++)
        B[k++]=A[i];
    for(;j<=h;j++)
        B[k++]=A[j];
    for(i=l;i<=h;i++)
        A[i]=B[i];
}
void Rmergesort(int A[],int l,int h)
{
    if(l<h)
    {
        int mid=(l+h)/2;
        Rmergesort(A,l,mid);
        Rmergesort(A,mid+1,h);
        merge(A,l,mid,h);
    }
}
int Max(int A[],int x)
{
    int max=A[0];
    for(int i=1;i<x;i++)
    {
        if(max<A[i])
            max=A[i];
    }
    return max;
}
void countsort(int A[],int n)
{
    int max,i;
    max=Max(A,n);
    int *c=new int[max+1];
    for(i=0;i<max+1;i++)
        c[i]=0;
    for(i=0;i<n;i++)
    {
        c[A[i]]++;
    }
    i=0;
    int j=0;
    while(i<max+1)
    {
        if(c[i]>0) {
            A[j++] =i;
            c[i]--;
        }
        else
            i++;
    }
}

int main()
{
    int A[]={8,6,3,5,9,2,4,1};
 //   int B[]={1,3,5,8,12,14};
   // int C[100];
    //BubbleSort(a,8);
    //InsertionSort(a,8);
    //selectionsort(a,8);
    //mergesort(A,B,C,8,6);
    //Rmergesort(A,0,7);
    countsort(A,8);
    for(int i=0;i<8;i++)
    {
        cout<<A[i]<<" ";
    }
    return 0;
}
